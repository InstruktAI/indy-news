name: build app

on:
  push:
    branches:
      - main
    paths:
      - .dockerignore
      - .github/**
      - 'api/**'
      - 'data/**'
      - 'db/**'
      - 'lib/**'
      - 'Dockerfile'
      - 'Home.py'
      - 'requirements.txt'

env:
  REGISTRY: docker.io
  REGISTRY_USER: morriz
  REGISTRY_PASS: ${{ secrets.DOCKER_TOKEN }}
  IMAGE_NAME: morriz/indy-news

jobs:
  api:
    timeout-minutes: 15
    runs-on: [self-hosted, linux, ARM64]
    steps:
      - name: Set env
        # we keep the tag for the cache registry
        run: |
          tag=${GITHUB_REF##*/}
          echo "Creating tag: $tag"
          echo "TAG=$tag" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Log in to the registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASS }}
      - name: Pull the previous image as cache
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} || true
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
      - name: Build and push image to registry
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
