openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /allsides:
    get:
      summary: Search Allsides
      operationId: search_allsides_allsides_get
      security:
        - APIKeyQuery: []
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
            title: Name
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 5
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: string
                title: Response Search Allsides Allsides Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /mediabiasfactcheck:
    get:
      summary: Search Mediabiasfactcheck
      operationId: search_mediabiasfactcheck_mediabiasfactcheck_get
      security:
        - APIKeyQuery: []
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
            title: Name
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 5
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: string
                title: Response Search Mediabiasfactcheck Mediabiasfactcheck Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /media:
    get:
      summary: Search Media
      operationId: search_media_media_get
      security:
        - APIKeyQuery: []
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
            title: Query
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 5
            title: Limit
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
                title: Response Search Media Media Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /media-videos:
    get:
      summary: Get Youtube Search
      description:
        Get the details of matching videos by either providing Youtube
        channels, a query, or both
      operationId: get_youtube_search_media_videos_get
      security:
        - APIKeyQuery: []
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: query
          in: query
          required: false
          schema:
            type: string
            minLength: 3
            title: Query string
          description:
            Query string used to match independent news channels and do a
            youtube search with in those channels.
          example: israel
        - name: channels
          in: query
          required: false
          schema:
            type: string
            title: Channels to search in
          description: A string of comma-separated Youtube channels to search in.
          example: '@aljazeeraenglish,@DemocracyNow'
        - name: period_days
          in: query
          required: false
          schema:
            type: integer
            title: Period in days
            default: 3
          description: The period in days since now that we want to search videos for.
        - name: max_channels
          in: query
          required: false
          schema:
            type: integer
            title: Max channels
            default: 12
          description:
            Maximum number of channels that we want to match. Needed when
            no channels were provided.
        - name: max_videos_per_channel
          in: query
          required: false
          schema:
            type: integer
            title: Max videos per channel
            default: 3
          description:
            The maximum number of videos per channel that we want from each
            channel search.
        - name: get_descriptions
          in: query
          required: false
          schema:
            type: boolean
            title: Get descriptions
            default: false
          description: Get the long descriptions for the videos.
        - name: get_transcripts
          in: query
          required: false
          schema:
            type: boolean
            title: Get transcripts
            default: true
          description: Get the transcripts for the videos.
        - name: char_cap
          in: query
          required: false
          schema:
            type: integer
            title: Max chars in the response
          description: The maximum number of characters for the response.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
                title: Response Get Youtube Search Media Videos Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /youtube-transcripts:
    get:
      summary: Get Youtube Transcripts
      description: Extract transcripts from a list of Youtube video ids
      operationId: get_youtube_transcripts_youtube_transcripts_get
      security:
        - APIKeyQuery: []
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: ids
          in: query
          required: true
          schema:
            type: string
            title: Ids
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoTranscript'
                title: Response Get Youtube Transcripts Youtube Transcripts Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /privacy:
    get:
      summary: Read Privacy
      operationId: read_privacy_privacy_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: string
                title: Response Read Privacy Privacy Get
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Media:
      properties:
        Name:
          type: string
          title: Name
        Website:
          type: string
          title: Website
        Youtube:
          type: string
          title: Youtube
        About:
          type: string
          title: About
        TrustFactors:
          type: string
          title: Trustfactors
        Topics:
          type: string
          title: Topics
        Wikipedia:
          type: string
          title: Wikipedia
        X:
          type: string
          title: X
        Bias:
          anyOf:
            - type: string
            - type: 'null'
          title: Bias
        Profile:
          anyOf:
            - type: string
            - type: 'null'
          title: Profile
        Factual:
          anyOf:
            - type: string
            - type: 'null'
          title: Factual
        Credibility:
          anyOf:
            - type: string
            - type: 'null'
          title: Credibility
      type: object
      required:
        - Name
        - Website
        - Youtube
        - About
        - TrustFactors
        - Topics
        - Wikipedia
        - X
        - Bias
        - Profile
        - Factual
        - Credibility
      title: Media
      description: Media model
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    Video:
      properties:
        id:
          type: string
          title: Id
        title:
          type: string
          title: Title
        short_desc:
          type: string
          title: Short Desc
        channel:
          type: string
          title: Channel
        duration:
          type: string
          title: Duration
        views:
          type: string
          title: Views
        publish_time:
          type: string
          title: Publish Time
        url_suffix:
          type: string
          title: Url Suffix
        long_desc:
          anyOf:
            - type: string
            - type: 'null'
          title: Long Desc
        transcript:
          anyOf:
            - type: string
            - type: 'null'
          title: Transcript
      type: object
      required:
        - id
        - title
        - short_desc
        - channel
        - duration
        - views
        - publish_time
        - url_suffix
      title: Video
      description: Video model
    VideoTranscript:
      properties:
        id:
          type: string
          title: Id
        text:
          type: string
          title: Text
      type: object
      required:
        - id
        - text
      title: VideoTranscript
      description: Video transcript model
  securitySchemes:
    APIKeyQuery:
      type: apiKey
      in: query
      name: apikey
    APIKeyHeader:
      type: apiKey
      in: header
      name: X-API-KEY
    HTTPBearer:
      type: http
      scheme: bearer
